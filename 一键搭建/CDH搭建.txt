### 所有节点都得设置 ###
1.创建虚拟机
2.查询 ip 地址
3.使用 xshell 去链接虚拟机
4.更改主机名	vim /etc/hostname
5.配置主机映射	vim /etc/hosts
6.ssh 免密通信，遇到的所有信息直接回车	ssh-keygen
7.拷贝公钥		ssh-copy-id	主机名
8.关闭防火墙
	systemctl stop firewalld.service   # 关闭防火墙
	systemctl status firewalld.service  # 查看防火墙状态
	systemctl disable firewalld.service # 永久关闭防火墙
9.关闭 SELINUX
	# 执行该命令后重启机器生效---配置完全部内容后重启
	vim /etc/sysconfig/selinux
	将SELINUX=enforcing改为SELINUX=disabled
10.安装 JDK，并配置 JAVA_HOME
	# 配置环境变量
		vim /etc/profile
	# 配置如下
export JAVA_HOME=/opt/jdk1.8.0_261
export JRE_HOME=$JAVA_HOME/jre
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH	
	# 刷新
		source /etc/profile
	# 测试
		java
11.修改 yum 源为阿里云镜像，并进入/etc/yum.repos.d/CentOS-Base.repo文件把所有的 http 改为 https 
	 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.baifen
	curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo
	# 生成缓存
	yum makecache
12.安装 ntp
	yum install -y ntp
	# 启动服务
		systemctl stop ntp   # 关闭 ntp 服务
		systemctl status ntpd  # 查看 ntp 服务的状态
		systemctl disable ntpd # 永久关闭 ntp 服务
		systemctl enable ntpd # 永久开启 ntp 服务
		systemctl start ntpd.service # 启动 ntp 服务
13.关闭 Linux 的 THP（透明大页）服务
	# 查看是否启动 THP
		cat  /sys/kernel/mm/transparent_hugepage/enabled
			# 表示处于启用状态
				[always] madvise never
			# 处于关闭状态
				always madvise [never]
	# 编辑文件 /etc/rc.local
		vim /etc/rc.local
	# 添加如下内容
if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
echo never > /sys/kernel/mm/transparent_hugepage/enabled
fi
if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
echo never > /sys/kernel/mm/transparent_hugepage/defrag
fi
	# 保存退出，然后赋予 rc.local 文件执行权限：
		chmod +x /etc/rc.d/rc.local 
14、安装依赖
yum -y install chkconfig python bind-utils psmisc libxslt zlib sqlite cyrus-sasl-plain cyrus-sasl-gssapi fues fues-libs redhat-lsb httpd mod_ssl
### 所有节点都得设置 ###


7、安装配置MySql
mysql 下载：官网5.7版本：https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar
1.rpm 查看 mariadb，是否存在，如果存在必须卸载
rpm -qa|grep mariadb
        如: mariadb-libs-5.5.65-1.el7.x86_64
2.卸载 mariadb
		rpm -e --nodeps	mariadb-libs-5.5.65-1.el7.x86_64
3. 为了避免出现权限问题，给 mysql 解压文件所在目录赋予最大权限
		在 opt 下创建 mysql 解压目录
			mkdir mysql
		设置 mysql 解压目录的权限
			chmod -R 777 mysql
        安装 MySQL 需要的一些依赖程序
			yum -y install make gcc-c++ cmake bison-devel ncurses-devel libaio libaio-devel net-tools

4. 解压 mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar 到/opt/mysql
		tar -xvf mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar -C /opt/mysql/
5. 严格按照顺序安装：
		# mysql-community-common-5.7.29-1.el7.x86_64.rpm、
		# mysql-community-libs-5.7.29-1.el7.x86_64.rpm、
		# mysql-community-client-5.7.29-1.el7.x86_64.rpm、
		# mysql-community-server-5.7.29-1.el7.x86_64.rpm这四个包
		# cd 到 mysql 目录下，依次输入命令
        centos7：
             			 rpm -ivh mysql-community-common-5.7.29-1.el7.x86_64.rpm
			 rpm -ivh mysql-community-libs-5.7.29-1.el7.x86_64.rpm
			 rpm -ivh mysql-community-client-5.7.29-1.el7.x86_64.rpm
			 rpm -ivh mysql-community-server-5.7.29-1.el7.x86_64.rpm
        centos6：
			 rpm -ivh mysql-community-common-5.7.29-1.el7.x86_64.rpm
			 rpm -ivh mysql-community-libs-5.7.29-1.el7.x86_64.rpm --force --nodeps
			 rpm -ivh mysql-community-client-5.7.29-1.el7.x86_64.rpm --force --nodeps
			 rpm -ivh mysql-community-server-5.7.29-1.el7.x86_64.rpm --force --nodeps
6. 配置数据库
		vim /etc/my.cnf
		# 在 [mysqld] 下添加这三行
skip-grant-tables
character_set_server=utf8
init_connect='SET NAMES utf8'
		# skip-grant-tables：跳过登录验证
		# character_set_server=utf8：设置默认字符集UTF-8
		# init_connect='SET NAMES utf8'：设置默认字符集UTF-8
7. 启动服务
		systemctl start mysqld.service #启动服务
		systemctl disable mysql.service #关闭服务
8. 启动 mysql
		输入 mysql
9. 先设置一个简单的临时密码
		update mysql.user set authentication_string=password('root') where user='root';
		# 立即生效
			flush privileges;
10. 退出（exit）mysql 再次登录
		mysql -uroot -proot
		# 重设密码
			set password=password('root');
		# 立即生效
			flush privileges;
11. 进入 mysql
		mysql -uroot -proot
		# 赋值权限
			alter user user() identified by "root";
		# 刷新
			flush privileges;
12. 使用 MySQL 数据库
		use mysql;
		# 查询 user 表
			select User,Host from user;
13. 修改 user 表，把 Host 表内容修改为 %
		update user set host='%' where host='localhost';
14. 删除 root 用户的其他 host
delete from user where Host='c1';
delete from user where Host='127.0.0.1';
delete from user where Host='::1';
# 刷新
	flush privileges;
# 查询 user 表修改之后的结果
	select User,Host from user;
# 退出

15、创建CM用的数据库
create database amon DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
create database hive DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
create database oozie DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
create database hue DEFAULT CHARSET utf8 COLLATE utf8_general_ci;

##### 以下所有均使用root用户操作#####
三、Cloudera Manager Server&Agent安装
CM安装包下载地址:   https://archive.cloudera.com/cm5/cm/5/
CDH安装包下载地址：  http://archive.cloudera.com/cdh5/parcels/5.15.0/

1、安装Cloudera Manager Server&Agent
文件上传的目录mkdir cdh
cd mycdh
(三台机器都要安装) tar xvzf cloudera-manager-centos7-cm5.15.0_x86_64.tar.gz  -C /opt

2、cp文件
cd /opt/mycdh
cp CDH* /opt/cloudera/parcel-repo/
cp manifest.json /opt/cloudera/parcel-repo/
cd /opt/cloudera/parcel-repo/
mv CDH-5.15.0-1.cdh5.15.0.p0.21-el7.parcel.sha1 CDH-5.15.0-1.cdh5.15.0.p0.21-el7.parcel.sha

3、创建cloudera-scm用户：
useradd --system --home=/opt/cm-5.15.0/run/cloudera-scm-server/ --no-create-home --shell=/bin/false --comment "Cloudera SCM User" cloudera-scm

4、设置权限
cd /opt
chown -R cloudera-scm:cloudera-scm c*

5、server_host配置为server的名字；
vim   /opt/cm-5.15.0/etc/cloudera-scm-agent/config.ini   中 server_host(三台机器)  端口： 7182

6、拷贝mysql驱动
# 新建目录
	mkdir /usr/share/java
# 拷贝文件到指定位置
	cp /opt/mysql-connector-java-5.1.48.jar /usr/share/java/mysql-connector-java.jar

7、初始化cm数据库:   
cd /opt/cm-5.15.0/share/cmf/schema/
 ./scm_prepare_database.sh mysql cm -h c1 -uroot -proot --scm-host c1 scm scm scm
格式：数据库类型、数据库、数据库服务器、用户名、密码、cm server服务器

8、查看是否生成成功：
mysql -uroot -proot
show databases;
看到cm就表示ok了。

9、给所有集群分发cm-5.15.0
scp -r jiaojianying:/opt/cm-5.15.0 mengtao:/opt/
scp -r jiaojianying:/opt/cm-5.15.0 dingyuelong:/opt/
scp -r jiaojianying:/opt/cm-5.15.0 bianaohui:/opt/

10、启动CM Manager&Agent服务
先确保启动了mysql  service mysqld start
c1:执行    ./opt/cm-5.15.0/etc/init.d/cloudera-scm-server start
c1,2,3:   执行  ./opt/cm-5.15.0/etc/init.d/cloudera-scm-agent start
service服务启动需要几分钟，取决于服务器的性能，此时我们可以使用
netstat -apn|grep 7182 || netstat -lntp 查看端口占用情况

11、登录
http://c1:7180
admin admin

12、服务选择impala的内核

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
******以下内容为选择操作：******
0、Server&Agent开机自启动服务
将/opt/cm-5.15.0/etc/init.d/目录下的cloudera-scm-server服务器启动脚本和cloudera-scm-agent代理服务启动脚本复制到/etc/init.d/目录下面。（/etc/init.d/目录用于存放开机启动脚本的目录）

复制代码
//配置server主节点c1
[root@c1 ~]# cp /opt/cm-5.15.0/etc/init.d/cloudera-scm-server /etc/init.d/cloudera-scm-server
[root@c1 ~]# chkconfig --add cloudera-scm-server
[root@c1 ~]# chkconfig cloudera-scm-server on
[root@c1 ~]# vi /etc/init.d/cloudera-scm-server
CMF_DEFAULTS=${CMF_DEFAULTS:-/etc/default} 修改为 CMF_DEFAULTS=${CMF_DEFAULTS:-/opt/cm-5.15.0/etc/default}  #你的cloudera manager安装目录，然后保存退出即可。
添加：export JAVA_HOME=/usr/local/java/jdk1.8           #你的java安装目录
[root@c1 ~]# chkconfig --list cloudera-scm-server  //然后查看状态,如果2-5显示开启表示配置成功。
[root@c1 ~]# service cloudera-scm-server start & systemctl start cloudera-scm-server.service

//配置agent所有节点,node11,node12,node13
[root@c1 ~]# cp /opt/cm-5.15.0/etc/init.d/cloudera-scm-agent /etc/init.d/cloudera-scm-agent
[root@c1 ~]# chkconfig --add cloudera-scm-agent
[root@c1 ~]# chkconfig cloudera-scm-agent on
[root@c1 ~]# vi /etc/init.d/cloudera-scm-agent
CMF_DEFAULTS=${CMF_DEFAULTS:-/etc/default} 修改为 CMF_DEFAULTS=${CMF_DEFAULTS:-/opt/cm-5.15.0/etc/default}
添加：export JAVA_HOME=/usr/local/java/jdk1.8         #你的java安装目录
[root@c1 ~]# service cloudera-scm-agent start & systemctl start cloudera-scm-agent.service